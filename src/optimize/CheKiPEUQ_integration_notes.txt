General Notes: 
0) I was mistaken about only a numpy dependence: we need scipy as well. But that is also standard for Anaconda so should not be hard to add.
1) There is a flag at top top of fit_fcn.py to forceBayesian = True until the GUI has it.
2) The capturing of error messages and printing inside the log tab is useful, but sometimes makes it hard to trace which line an error is coming from, because the line number seems to be printed for only some kinds of errors.

Bayesian Notes:
I have put comments labeling the below steps in the code.
To simplify being able to follow the code, I have made a variable named Bayesian_dict. Currently, the algorithm has one step before calling time_adjust_func.

#Step 1 of Bayesian:  Prepare any variables that need to be passed into time_adjust_func.
#Step 2 of Bayesian:  populate Bayesian_dict with any variables and uncertainties needed.
#Step 3 of Bayesian:  create a CheKiPEUQ_PE_Object (this is a class object)
#Step 4 of Bayesian:  call a function to get the posterior density which will be used as the objective function.
#Step 5 of Bayesian:  return the objective function and any other metrics desired.


#FIXME: the **final** output after minimization currently requires the verbose version of time_adjust_func. The verbose version of time_adjust_func does not currently work for the Bayesian case. So we are currently using the 'residual' version even after a minimization on the Bayesian case.
#FIXME: for Step 1 of Bayesian I need to check if the initial guess is really being retained with the shock or is being changed each time.  need to make rate_val_original or something like that.
